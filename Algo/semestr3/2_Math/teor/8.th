Напомним всё про граф Делоне:

Опр. Пусть P - набор сайтов. Vor(P) - его диагр. Вороного.
Тогда Граф Делоне:
Вершины - сайты, рёбра - соединяют сайты, ячейки которых имеют общее ребро или луч. (назовём их соседними).

Теорема: Граф Делоне - плоский(если рисовать рёбра отрезками, а не кривыми)
Док-во: Пусть не так и pi-pj, pk-pl это пересекающиеся рёбра графа Делоне.
Сл-но существует круг с центром в xij, т.ч. на границе лежат pi-pj и больше никого ни внутри ни на границе (св-во диагр. Вороного)
Построим соотв. треугольник Tij, соотв. последним трём точкам. Ан-но треуг. Tkl.
Тогда утв-ся, что ни одна вершина одного не принадлежит другому и наоборот. (why?)
Тогда один из отрезков pi-xij, pj-xij пересекает один из отрезков pk-xkl и pl-xkl.
Это означает, что 2 ячейки Вор. пересекаются по внутренности => противоречие.

Теорема.
(1) Сайты pi, pj, pk явл-ся вершинами одной ограниченной грани графа Делоне <=> сущ-ет q: Cq(P) содержит на границе pi, pj, pk
(2) Отрезок pi-pj явл-ся ребром графа Делоне <=> сущ-ет q: Cq(P) содержит на границе pi, pj и больше никого. (q лежит на серпере)
Док-во: аналогичное тому, что было.

Следствие - Любая (огр.) грань графа Делоне - вписанный в окр. выпукл. многоугольник.
Док-во: из (1) док-ть, что q для всех точек совпадёт и будет центром этой окр-ти.

Опр. Триангуляция Делоне - (любая) триангуляция, полученная из графа Делоне подразбиением всех граней на треуг-ки.
Инсайт: такая грань получится, когда эти сайты (вершины грани) равноудалены от какой-то точки на плоскости.
Заметим: Вне зависимости от триангуляции, min угол в трианг. совп => все хорошие.

Далее займёмся поиском Трианг. Делоне без явного построения Vor(P).

Теорема(1-й критерий). (б/д).
Триангуляция T явл. трианг. Делоне <=> круг, описанный вокруг любого треуг. T не содержит внутри себя других вершин T.

Опр. Пусть в триангуляции Т есть два треуг-ка (pi, pj, pk) и (pi, pj, pl), а их объединение - выпуклый треугольник.
Назовём опреацию edge flip следующим: Удаление ребра pi-pj и вставка pk-pl. Это типа перекройка четырёхугольника.

Опр. Ребро pi-pj нелегальное, если после flip-а минимальный из углов в четырёхугольнике увеличился.
(типа его стоит флипнуть)

Утв. (критерий легальности). (б/д)
Пусть в T есть два тех треугольника. Тогда треуг. pi-pj нелег <=> круг описанный вокруг pipjpk содержит pl строго внутри себя
Док-во: [использовать теор. Фалеса] 

Утв. (б/д)
Пусть pqr - вершины треуг. заданные при обходе по часовой стрелке,
тогда точка s лежит внутри круга построенного по pqr
<=>
    (px py p.len^2 1)
det (qx qy q.len^2 1) > 0
    (rx ry r.len^2 1)
    (sx sy s.len^2 1)

Опр. Триангуляция называется легальной, если в ней нет нелегальных рёбер.

Утв.
Из любой трианг. можно построить легальную за конечное число флипов рёбер.
Д-во конечности алгоритма.
Пусть в триангуляции t треуг-ов. Пусть (alpha1, ..., alpha3n) - список углов в пор. возрастании.
Каждый флип ребра увел. этот список (в лексикограф. смысле)

Теорема (2 критерий). (б/д).
Триангуляция легальна <=> T - трианг. Делоне.

Теорема. Триангуляция Делоне максимизирует минимальный угол.
Пусть не так и T - трианг. Делоне, с min углом alpha.
А T' - друг. трианг. с min углом beta > alpha.
Легализуем T' => T''. min(T'') = delta >= beta.
Однако T'' тоже трианг. Делоне. Противоречие - ведь у всех трианг. Делоне одинак. миним. угол.

Итого - чтобы найти классную трианг - найдём легальную, у неё будет классный угол.

Алгоритм. (итеративный и рандомизированный).
Выберем среди сайтов точку p0 - max y, max x. // т.е. самую верхнюю, а среди них самую правую.
Выберем точки p_-1, p_-2 - фиктивные вершины(слева сверху и справа снизу, напр), так чтобы треуг. содержал все вершины.
Далее случайно перемешаем p1...pn-1 и будем поддерживать легальную трианг. на {p_-2, p_-1, p0, ... pk}
Добавляя очередую вершину - определим треугольник, в котором она лежит, а затем запускаем flip-ы, пока не восстановим легальность.

Вопрос1 - как понять треугольник.
Вопрос2 - с точками p_-1, p_-2 будем работать if-ами, не задавая координаты явно (чтобы не столкнуться с погрешн.)

Замечание. Этот алгоритм конечный. // n раз легализуем трианг-ию.

Теорема(б/д). Матожидание времени работы есть O(nlogn), при этом кол-во флипов рёбер в среднем O(n).
Основная сложность - как понять, в каком треугольнике лежит очередная точка.

Уточнение: 
Если pr внутри треуг-ка pipjpk - удаляем его, добавляем 3 новых, легализуем рёбра, противолежащие pr в каждом из них
Если pr на границе двух треуг., удаляем их, добавляем 4 новых, легализуем рёбра, противолежащие pr в каждом из них

Уточнение:
legalizeEdge(pr, pi-pj).
Пусть pk - вершина треуг, тоже опирающ. на pi-pj, но с другой стороны.
flip ребра и рекурс. запуск legalize от (pr, pi-pk), (pr, pj-pk).

Утв. После заверш. всех legalize-ов получим легеальную трианг.
Это следует из того, что добавл. рёбра одной из вершин содержат pr, а такие рёбра обяз. лежат в графе Делоне.
Почему последнее верно? На экз. идёт (б/д), но вот неформально:
Если pi-pj-pk и правда треуг. в трианг. Делоне, тогда по критерию есть окружность, в которой ничего не лежит,
Сузим его так, чтобы он лежал внутри старого круга, содержал pr, pi на границе, тогда по критерию pr-pi лежит в трианг-ии.

Задача локализации (в каком треуг. лежит точка pr?)
Храним историю локализации в виде DAG. Изначально есть одна вершина соотв. треуг. (p_-1, p_-2, p0).
1) При разбиении треуг. на 3 новых - создадим три новых вершины и проведём в них рёбра из вершины соотв. старому треуг.
    // кейс с попаданием на ребро - аналогично
2) При флипе ребра создаём две новых вершины, соотв. новым треуг. Проведём 2х2 ребра из старых треуг-ов в новые.

Локализация тогда работает так:
Спуск по DAG из корня, каждый раз выбирая куда идти, за О(1) проверяя в каком из подтреуг-ов лежит наша точка.
Завершаемся в листе - это и есть искомый треуг.

Замечание: За счёт случайного порядка на вершинах - граф будет иметь в среднем O(logn) глубину.

Последнее:
Как обрабатывать точки p_-1, p_-2
Будем говорить, что точка p выше точки q, если
1) p.y > q.y
или
2) p.y = q.y AND p.x < q.x

Формально - p_-1 - точка ниже всех точек, а также так далеко вправо, что
1) все точки видны по возрастанию высот
2) p_-1 вне любого круга, проходящ из P

Ан-но p_-2, только выше всех точек и далеко влево.
и (2): вне любого круга проход через P + {p_-1}

Проверка легальности ребра pipj в контексте четырёхуг-ка pi, pj, pk, pl
а) Если pipj - ребро в треуг. p-2, p0, p-1, то pipj - легально
б) Если i,j,k,l >= 0, то делаем обычную проверку
в) pi,pj - легаьно <=> min(k, l) < min(i, j)
Проверяется проверкой случаев, либо где там какое отрицательное, слева-справа, оба с одной стороны быть не могут, НАВИ ЧЕМПИОНЫ!!!!
