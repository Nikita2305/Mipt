Контрольная 13 мая - по всему лекционному материалу.
QA - вторая часть.
Продолжаем изучать 7 ключевых инструментов.

5) Гистограмма
    - Позволяет что-то удобно проиллюстрировать
    - Гибкий инструмент, т.е. широкая область применения.

6) Диаграмма Парето
    - Правило Парето(правило 80 / 20):
        - 20 процентов клиентов приносят 80 процентов денег
        - 20 проентов ошибок приводят к 80 процентам проблем
    - Внешний вид:
        Строим гистограмму, сортируем столбики по высоте (высота - в процентах)
        Далее строим прямую, которая высотой префиксной сумм.
        // Т.е. складываем по очереди процентные значения столбиков и строим выпуклую кривую
    - Полезно строить в разные моменты времени

7) Диаграмма разбрасывания
    - Кореляция величин - наличие связи/зависимости между величинами
    - Внешний вид:
    Плоскость XOY, где каждой оси соспоставлена величина.
    Далее производим измерения обеих величин в разные моменты времени и отмечаем соотв. точки (x, y) на пл-ти
    Далее два варианта:
        1) Просматривается какая-то картинка / сгруппированность(кластеры) и т.п.
        2) Распределение точек по плоскости примерно равномерное
    - Иногда полезно искать корреляцию двух внешних показателей.

Ручное тестирование - Практика
    - Во всех компаниях - чек-листы, тест-планы, тест-сьюты(наборы тестовых кейсов), тест-кейсы
        Определённые документы, чтобы производить грамотное тестирование.
    - Ручное тестирование в обозримом будущем не будет заменено автоматизированным:
        - Исследовательское тестирование человек делает лучше.
        - Тестирование своего кода - пожалуй, лучший способ повысить его качество.
    - Может быть:
        - Проверка соответствия спецификации(документации/ТЗ в т.ч.)
        - Ручное тестирование перед автоматическим
        - Ручное тестирование(детализированное, напр.) и автоматическое параллельно
    - Сколько автотесты занимают для больших продуктов: *часы*


Автоматизированное тестирование - теория
    - Чем автоматизированное тестирование лучше ручного:
        - Позволяет быстрее находить ошибки
        - Цикл тестирования гораздо дешевле
    - Чем ручное тестирование лучше автоматизированного:
        - Эффективнее
        - Более гибкое
    - Тестирование нужно начинать с ручных сессий! Далее, когда сессии тестирования начнут повторяться,
    стоимость автоматизации и планируемое количество сессий подскажут, что нужно автоматизировать в первую очередь
    - Идеальная ситуация - когда используется эффективная комбинация ручного и автоматизированного тестирования

Жизненный цикл автотеста:
    - Создание теста 
    - Проверка и отладка теста
    - Встраивание теста в прогон автотестов
    - Удаление теста из инфраструктуры

Автоматизированное тестирование - Практика:
    - Автотесты - это не только автоматизация ручных тестов
        - Они могут быть более комплексными и объёмными
    - Разработка автоматизации тестирования - это полноценная разработка ПО(в том числе тесты для тестов и др.)
    - При написании автотестов нужно следовать стандартам и идиомам.
    - Помните о затратах на внедрение автотестов и их обслуживание
    - Тесты следует делать независимыми друг от друга.
    - Логирование и отчёты следует вводить с самого начала (логирование для системы автотестов)
    - Тестируемость и автоматизируемость продукта с самого начала
    - Не попадайте в ловушку невозвратных затрат
        - Напр: не стоит писать автотесты, если проверка валидности результата требует глаза человека.
    - Посмотрите не существует ли готовых аналогов.
    - Никогда не делайте тестовые данные зависимыми от времени.
        Тест - некоторый закрытый мир, который не берёт данные из внешнего мира.
    
Как бывает на практике:
    - У компании свой фраемворк для тестирования(самописный, основанный на чём-то)
    - Гигантские мощности в датацентрах для автотестирования
    - И даже "старые" компы и компы разработчиков по ночам!

Роль CI/CD.
    Ну вы сами знаете что это и как работает:
    - Developer: push
    - gitHub: вызывает CI-машину
    - CI-машина: прогоняет тесты и оповещает разработчика о результатах теста, предоставляет артефакты
    - Developer: сделал выводы
    
