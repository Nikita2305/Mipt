5 принципов SOLID
1) S - Single-responsibility principle
	Принцип единственной ответственности - класс должен иметь лишь одну ответсвенность
	и эта ответсвенность должна быть полностью инкапсулирована в класс.
2) O - Open-closed principle
	Открыт для расширения, закрыт для изменения - всё логично.
3) L - Liskov substitutional principle
	Объект ребёнка можно подставить вместо объекта родителя(имеется ввиду, что это должно быть логично).
4) I - Interface segregation principle
	Принцип разделения интерфейсов - Много интерфейсов, специально предназнаечнных для разных клиентов лучше,
	чем один интерфейс общего назначения.
5) D - Dependency inversion principle
	Принцип обращения зависимостей - зависимости на абстракциях, а не на реализациях.
	Это значит, что делаем абстрактные классы, у которых фикс. названия функций,
	и зависимости строим на этих названиях. Реализации могут меняться, но всё будет работать, хрупкость низкая.
