Диаграммы UML. 2ая лекция в рамках темы "Процесс разработки ПО"
UML - unified modeling language.

Есть элементы, связи.
Есть правила "рисования" - нотация. Если соблюдать все правила - можно даже 
При том можно пренебрегать нотацией, чтобы упрощать процесс проектирования и более удобной коммуникации.

1) Диаграмма вариантов использования
На диаграмме есть actor-ы(могут быть не только люди, но и сторонние сервисы) -
    - те, кто и как используют наш сервис.
Стрелочки = соединители.
a -> b (<<extend>>) - действие а (опционально) расширяет действие b.
a -> b (<<include>>) - действие а включает в себя действие b.(обязательно)

2) Диаграмма классов
Прямоугольнички - классы
Название сверху.
    Если класс абстрактный - писать курсивом.
Поля ниже.
+ public
- private
# protected
Методы ниже.
+ smth: return type

Соединитель(без стрелочек) -(о принадлежности) с циферками около каждого класса(около банка +1, около польз +1..*)

Соединитель(пустая стрелочка) - наследование от наследника к родителю.

3) Диаграмма последовательности.
Две вертикальных прямых(линии жизни).
Там где прямоугольники на линиях жизни - происходит нек. процесс.
Линии жизни общаются друг с другом некоторыми методами (стрелочки вправо/влево).

4) Диаграммы состояний.
Каждый блок - состояние системы. Между блоками методы, которые переводят систему из одного состояния в другой.
Похожу на блок схему.

5) Диаграмма деятельности
Опять похоже на блок схему, где описаны вызовы функций в тех или иных случаях.
Начальная и терминальная вершины, как кружок и кружок с каёмкой.

Далее примеры:
Из диаграммы вариантов использования не виден тайм-лапс. Поэтому используем диаграмму деятельности.
